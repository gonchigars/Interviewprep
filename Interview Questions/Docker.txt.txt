1. Q: What is Docker?
   A: Docker is a platform for developing, shipping, and running applications in containers.

2. Q: What is a container?
   A: A container is a lightweight, standalone, executable package that includes everything needed to run a piece of software.

3. Q: How is a container different from a virtual machine?
   A: Containers virtualize the operating system, while VMs virtualize hardware. Containers are more lightweight and start up faster.

4. Q: What is a Docker image?
   A: A Docker image is a read-only template used to create containers. It contains the application code, libraries, tools, and other files needed to run an application.

5. Q: What is a Dockerfile?
   A: A Dockerfile is a text file that contains instructions for building a Docker image.

6. Q: What is the purpose of the FROM instruction in a Dockerfile?
   A: FROM specifies the base image to use for subsequent instructions in the Dockerfile.

7. Q: What is Docker Compose?
   A: Docker Compose is a tool for defining and running multi-container Docker applications using a YAML file.

8. Q: What is the typical structure of a docker-compose.yml file?
   A: It typically includes version, services, networks, and volumes sections.

9. Q: How do you start containers with Docker Compose?
   A: Use the command "docker-compose up" in the directory containing the docker-compose.yml file.

10. Q: What is the purpose of the "depends_on" option in Docker Compose?
    A: It expresses dependency between services, determining the order of service startup.

11. Q: How can you scale a service using Docker Compose?
    A: Use the command "docker-compose up --scale SERVICE=NUM" where SERVICE is the service name and NUM is the number of containers.

12. Q: What is a Docker volume?
    A: A Docker volume is a persistent data storage mechanism that exists outside the container's filesystem.

13. Q: How do you create a volume in a docker-compose.yml file?
    A: Use the "volumes" key under a service definition or at the top level of the file.

14. Q: What is the difference between ADD and COPY instructions in a Dockerfile?
    A: COPY is simpler and only copies local files, while ADD has additional features like auto-extracting archives.

15. Q: What is Docker Hub?
    A: Docker Hub is a cloud-based registry service for storing and sharing Docker images.

16. Q: How do you push an image to Docker Hub?
    A: Use the "docker push" command after tagging your image with your Docker Hub username.

17. Q: What is the purpose of the EXPOSE instruction in a Dockerfile?
    A: EXPOSE informs Docker that the container listens on specified network ports at runtime.

18. Q: How can you view the logs of a running container?
    A: Use the "docker logs CONTAINER_ID" command.

19. Q: What is Docker Swarm?
    A: Docker Swarm is a native clustering and orchestration solution for Docker.

20. Q: How do you list all running containers?
    A: Use the "docker ps" command.

21. Q: What is the difference between CMD and ENTRYPOINT in a Dockerfile?
    A: CMD provides default arguments for an ENTRYPOINT, which specifies the executable to run when the container starts.

22. Q: How can you limit the resources a container can use?
    A: Use resource constraints like --memory and --cpus in docker run command or in docker-compose.yml.

23. Q: What is a multi-stage build in Docker?
    A: It's a method to create smaller production images by using multiple FROM statements in a Dockerfile.

24. Q: How do you create a Docker network?
    A: Use the "docker network create" command.

25. Q: What is the purpose of .dockerignore file?
    A: It specifies files and directories that should be excluded when building a Docker image.

26. Q: How can you check the version of Docker installed?
    A: Use the "docker version" command.

27. Q: What is Docker Compose override file?
    A: It's a file named docker-compose.override.yml used to customize the configuration for development environments.

28. Q: How do you remove all stopped containers?
    A: Use the "docker container prune" command.

29. Q: What is the difference between "docker-compose up" and "docker-compose run"?
    A: "up" starts all services, while "run" runs a one-time command against a service.

30. Q: How can you update a single service when using Docker Compose?
    A: Use "docker-compose up --no-deps SERVICE" where SERVICE is the name of the service to update.

31. Q: What is the purpose of HEALTHCHECK instruction in Dockerfile?
    A: It tells Docker how to test a container to check if it's still working correctly.

32. Q: How do you specify environment variables in Docker Compose?
    A: Use the "environment" key under a service in the docker-compose.yml file.

33. Q: What is the difference between "docker-compose down" and "docker-compose stop"?
    A: "down" stops and removes containers, networks, and volumes, while "stop" only stops the containers.

34. Q: How can you view the Docker image layers?
    A: Use the "docker history IMAGE_NAME" command.

35. Q: What is Docker BuildKit?
    A: It's a new backend for executing your Docker builds that offers better performance, storage management, and security.

36. Q: How do you enable BuildKit in Docker?
    A: Set the environment variable DOCKER_BUILDKIT=1 before running docker build.

37. Q: What is the purpose of the "restart" policy in Docker Compose?
    A: It defines when and how to restart containers when they exit.

38. Q: How can you run a container in detached mode?
    A: Use the -d flag with the docker run command.

39. Q: What is the purpose of docker-compose.override.yml file?
    A: It's used to override configuration from the main docker-compose.yml file, typically for development environments.

40. Q: How do you force Docker Compose to recreate containers?
    A: Use the --force-recreate flag with docker-compose up.

41. Q: What is the difference between shell form and exec form in Dockerfile CMD instruction?
    A: Shell form runs the command in a shell, while exec form runs the command directly without a shell.

42. Q: How can you view real-time events from Docker?
    A: Use the "docker events" command.

43. Q: What is the purpose of .dockerignore file?
    A: It tells Docker which files to ignore when building an image, similar to .gitignore.

44. Q: How do you copy files from a container to the host?
    A: Use the "docker cp" command.

45. Q: What is Docker content trust?
    A: It's a feature that provides digital signing for Docker images.

46. Q: How can you check the logs of a specific service in Docker Compose?
    A: Use "docker-compose logs SERVICE_NAME".

47. Q: What is the purpose of the "build" key in docker-compose.yml?
    A: It specifies the build configuration for creating an image from source.

48. Q: How do you remove all unused Docker objects?
    A: Use the "docker system prune" command.

49. Q: What is the difference between ADD and COPY instructions in Dockerfile?
    A: ADD has some extra functionality like auto-extracting archives, while COPY is simpler and more transparent.

50. Q: How can you reduce the size of a Docker image?
    A: Use multi-stage builds, minimize layers, and use smaller base images like Alpine.

